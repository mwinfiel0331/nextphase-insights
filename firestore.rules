rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write access during development
    match /{document=**} {
      allow read, write: if true;  // WARNING: Only for testing! Change this in production
    }

    // Test collection for verifying connection
    match /_test/{docId} {
      allow read, write: if true;
    }

    // Helper functions for validation
    function isValidEmail(email) {
      return email.matches('^[^@]+@[^@]+\\.[^@]+$');
    }

    function isValidCompanySize(size) {
      return size in ['1-10', '11-50', '51-200', '201-500', '500+'];
    }

    function isValidIndustry(industry) {
      return industry in ['Technology', 'Healthcare', 'Finance', 'Retail', 'Manufacturing', 'Other'];
    }

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.user_type == "ADMIN";
    }

    function isCurrentUser(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isCurrentUser(userId);
      allow update: if isAuthenticated() && 
        (isCurrentUser(userId) || isAdmin()) &&
        request.resource.data.user_type == resource.data.user_type; // Only admins can change user_type
      allow delete: if isAdmin();
    }

    // Intakes collection
    match /intakes/{intakeId} {
      allow read: if isAuthenticated() && 
        (resource.data.user_id == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() &&
        request.resource.data.user_id == request.auth.uid;
      allow update: if isAuthenticated() &&
        (resource.data.user_id == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }

    // Client collection rules
    match /clients/{clientId} {
      allow read: if isAuthenticated();
      allow create: if 
        request.resource.data.company_name is string &&
        request.resource.data.company_name.size() > 0 &&
        isValidIndustry(request.resource.data.industry) &&
        isValidCompanySize(request.resource.data.company_size) &&
        isValidEmail(request.resource.data.contact_email);
      allow update: if 
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['status', 'updated_at', 'pain_points', 'goals']);
      allow write: if isAuthenticated();
    }

    // Sessions collection rules
    match /sessions/{sessionId} {
      allow read: if isAuthenticated();
      allow create: if 
        request.resource.data.company_id is string &&
        request.resource.data.session_date is timestamp &&
        request.resource.data.status in ['new', 'completed', 'cancelled'];
      allow update: if 
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['status', 'summary']);
      allow write: if isAuthenticated();
    }

    // Tools Collection
    match /tools/{toolId} {
      allow read: if true;  // Public read access
      allow write: if isAuthenticated();
    }

    // Metadata documents
    match /{path=**}/_metadata {
      allow read: if true;
      allow write: if false;  // Only administrative updates
    }
  }
}